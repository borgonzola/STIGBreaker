#!/bin/bash
echo "chose mode (C)heck or (F)ix"
read mode
if [[ "$mode" != C && "$mode" != F ]]; then 
	echo "Invalid Mode Selected"	
	exit 0
else
	echo $mode "Selected"
fi
echo ""
echo "UBTU-20-010009"
echo ""
echo "If the root password entry does not begin with "password_pbkdf2", this is a finding."
grep -i password /boot/grub/grub.cfg 
echo ""
echo "Fix Text: Configure the system to require a password for authentication upon booting into single-user and maintenance modes." 
if [[ "$mode" == F ]]; then
	gtest=$(grep -i password /boot/grub/grub.cfg)
	grubhash='grub.pbkdf2.sha512.10000.A81F6CDCAB49E45057823986D4B8260A5DF74B7B1EB587D96F7425170F01132A99E1A89936331C54804022C33317C2E2FBDF4D1F14926794C7E4A5B108DCB0DE.FA0C060CAD57DC657D596E95E79FF71EFB815267352A53BE8D2D12F8B34A5BF426252DE01FD537F430F66AAA640CCC0D0EFC13D455F688546507748C3AE71799'
	#This is the hash for "pass", or it just breaks your computer. Good Luck!
	if [[ gtest == false ]]; then
		sudo sed -i '$i set superusers=\"root\"\npassword_pbkdf2 root $grubhash' /etc/grub.d/40_custom 
		sudo update-grub
		echo "Hash Added!"
	fi
else
	gtest=$(grep -i password /boot/grub/grub.cfg)
	if [[ gtest == false ]]; then
		printf "Generate an encrypted (grub) password for root with the following command:
		$ grub-mkpasswd-pbkdf2 

		Enter Password: 
		Reenter Password: 
		PBKDF2 hash of your password is grub.pbkdf2.sha512.10000.MFU48934NJD84NF8NSD39993JDHF84NG 
		 
		Using the hash from the output, modify the "/etc/grub.d/40_custom" file with the following command to add a boot password: 
		 
		$ sudo sed -i '$i set superusers=\"root\"\npassword_pbkdf2 root <hash>' /etc/grub.d/40_custom 
		 
		where <hash> is the hash generated by grub-mkpasswd-pbkdf2 command. 
		 
		Generate an updated "grub.conf" file with the new password by using the following command: 
		 
		$ sudo update-grub"
	fi
fi
printf "\n\n"
echo "UBTU-20-010012"
echo ""
echo "If the sudo group contains users not needing access to security functions, this is a finding."
grep sudo /etc/group
echo ""
echo "Fix Text: Configure the sudo group with only members requiring access to security functions."
echo "To remove a user from the sudo group, run:" 
echo "$ sudo gpasswd -d <username> sudo"

printf "\n\n"

echo "UBTU-20-010406"
echo ""
echo "If the rsh-server package is installed, this is a finding."
dpkg -l | grep rsh-server 
echo ""
printf "Configure the Ubuntu operating system to disable non-essential capabilities by removing the rsh-server package from the system with the following command: "
echo "$ sudo apt-get remove rsh-server" 
if [[ "$mode" == F ]]; then
	rshtest=$(dpkg -l | grep rsh-server)
	if [[ rshtest != false ]]; then
		sudo apt-get remove rsh-server
		echo "rsh-server removed!"
	fi
else
	rshtest=$(dpkg -l | grep rsh-server)
	if [[ rshtest != false ]]; then
		echo "This is a Finding!"
	fi
fi

printf "\n\n"

echo "UBTU-20-010459"
echo ""
echo "If the "logout" key is bound to an action, is commented out, or is missing, this is a finding."
grep logout /etc/dconf/db/local.d/*
echo ""
printf "Configure the system to disable the Ctrl-Alt-Delete sequence when using a graphical user interface by creating or editing the /etc/dconf/db/local.d/00-disable-CAD file." 
if [[ "$mode" == F ]]; then
	logtest=$(grep "logout" /etc/dconf/db/local.d/*)
	if [[ logtest != "logout=''" ]]; then
		sudo echo "[org/gnome/settings-daemon/plugins/media-keys]" >> /etc/dconf/db/local.d/00-disable-CAD file
		sudo echo "logout=''" >> /etc/dconf/db/local.d/00-disable-CAD file
		sudo dconf update
		echo "logout key corrected!"
	fi
else
	logtest=$(grep "logout" /etc/dconf/db/local.d/*)
	if [[ logtest != "logout=''" ]]; then
		echo "This is a Finding!"

	fi
fi

printf "\n\n"
echo "UBTU-20-010463"
echo ""
echo "If null passwords can be used, this is a finding."
grep grep nullok /etc/pam.d/common-password
echo ""
echo "Fix Text: If an account is configured for password authentication but does not have an assigned password, it may be possible to log on to the account without authenticating."
pwtest=$(grep "nullok" /etc/pam.d/common-password)
if [[ pwtest != false ]]; then
	echo "This is a Finding!"
	printf "Remove any instances of the "nullok" option in "/etc/pam.d/common-password" to prevent logons with empty passwords."
	fi

printf "\n\n"

echo "End of Report"
